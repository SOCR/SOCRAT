// Generated by CoffeeScript 1.12.2
(function() {
  'use strict';
  var AppNotificationDirective, BaseDirective, dirsMod,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseDirective = require('scripts/BaseClasses/BaseDirective');

  module.exports = AppNotificationDirective = (function(superClass) {
    extend(AppNotificationDirective, superClass);

    function AppNotificationDirective() {
      return AppNotificationDirective.__super__.constructor.apply(this, arguments);
    }

    AppNotificationDirective.prototype.initialize = function() {
      this.restrict = 'E';
      this.transclude = true;
      this.template = '<div></div>';
      return this.link = function(scope, elem, attr) {
        scope.update = function(evt, args) {
          var _change, duration, f, failureCallback, i, successCallback;
          _change = function(obj) {
            elem.removeClass().addClass('alert');
            elem.addClass(obj.type);
            elem.css('display', 'block').css('z-index', '9999').css('position', 'fixed');
            return elem.html(obj.msg);
          };
          if (args != null) {
            duration = args.duration || 3000;
            if ((f = args.final) != null) {
              _change(f);
              setTimeout(function() {
                elem.html('');
                return elem.css('display', 'none');
              }, duration);
              return false;
            }
            if ((i = args.initial) != null) {
              _change(i);
              successCallback = function() {
                _change(args.success);
                return setTimeout(function() {
                  elem.html('');
                  return elem.css('display', 'none');
                }, duration);
              };
              failureCallback = function() {
                _change(args.failure);
                return setTimeout(function() {
                  elem.html('');
                  return elem.css('display', 'none');
                }, duration);
              };
              return args.promise.then(successCallback, failureCallback);
            }
          }
        };
        return scope.$on('app:push notification', scope.update);
      };
    };

    return AppNotificationDirective;

  })(BaseDirective);

  dirsMod = angular.module('app_directives');

  AppNotificationDirective.register(dirsMod, 'notification');

}).call(this);

//# sourceMappingURL=AppNotification.directive.js.map
