// Generated by CoffeeScript 1.12.2

/*

Convert json returns to chart input format
 */

(function() {
  var databridge;

  databridge = angular.module("app_utils");

  databridge.factory("app_utils_databridge", [
    function(chart, labels) {
      var colA, colB, data, i, j, k, l, len, len1, len10, len2, len3, len4, len5, len6, len7, len8, len9, m, n, o, p, q, r, ref, ref1, ref2, ref3, ref4, retobj, s, t, tab1, u;
      colA = [1, 2, 3, 4, 5];
      colB = [1, 3, 5, 3, 1];
      tab1 = dv.table([
        {
          name: "A",
          values: colA,
          type: dv.type.numeric
        }, {
          name: "B",
          values: colB,
          type: dv.type.numeric
        }
      ]);
      data = tab1;
      retobj = [];
      for (k = 0, len = numCharts.length; k < len; k++) {
        i = numCharts[k];
        retobj.push({
          key: labels[i],
          values: []
        });
      }
      switch (chart) {
        case "line":
          for (l = 0, len1 = numCharts.length; l < len1; l++) {
            i = numCharts[l];
            ref = data[2 * i].length;
            for (m = 0, len2 = ref.length; m < len2; m++) {
              j = ref[m];
              retobj[i].values.push([data[2 * i][j], data[2 * i + 1][j]]);
            }
          }
          break;
        case "cumulative":
          for (n = 0, len3 = numCharts.length; n < len3; n++) {
            i = numCharts[n];
            ref1 = data[2 * i].length;
            for (o = 0, len4 = ref1.length; o < len4; o++) {
              j = ref1[o];
              retobj[i].values.push([data[2 * i][j], data[2 * i + 1][j]]);
            }
          }
          break;
        case "scatter":
          for (p = 0, len5 = numCharts.length; p < len5; p++) {
            i = numCharts[p];
            ref2 = data[3 * i].length;
            for (q = 0, len6 = ref2.length; q < len6; q++) {
              j = ref2[q];
              retobj[i].values.push({
                x: data[3 * i],
                y: data[3 * i + 1],
                size: data[3 * i + 2]
              });
            }
          }
          break;
        case "area":
          for (r = 0, len7 = numCharts.length; r < len7; r++) {
            i = numCharts[r];
            ref3 = data[3 * i].length;
            for (s = 0, len8 = ref3.length; s < len8; s++) {
              j = ref3[s];
              retobj[i].values.push({
                x: data[3 * i],
                y: data[3 * i + 1],
                area: data[3 * i + 2]
              });
            }
          }
          break;
        case "stackedbar":
          for (t = 0, len9 = numCharts.length; t < len9; t++) {
            i = numCharts[t];
            ref4 = data[2 * i].length;
            for (u = 0, len10 = ref4.length; u < len10; u++) {
              j = ref4[u];
              retobj[i].values.push([data[2 * i][j], data[2 * i + 1][j]]);
            }
          }
      }
      return retobj;
    }
  ]);


  /*
  ERROR: IF SAME DATA POINT OCCURS MORE THAN ONCE (https://github.com/novus/nvd3/issues/330)
  
  which graph, which data to use, project::fork
  given graph type, project::fork (gives data using this key)
   */


  /*
  function to extract the data from datavore
  
  different function for each type of graph
   */

}).call(this);

//# sourceMappingURL=databridge.js.map
