// Generated by CoffeeScript 1.12.2
(function() {
  'use strict';
  var BaseCtrl, DataWranglerMainCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  require('jquery-highlight');

  require('datatables.net');

  require('datatables.net-dt/css/jquery.dataTables.css');

  require('data-wrangler/lib/hoverIntent/hoverIntent.js');

  require('data-wrangler/style/layout.css');

  require('data-wrangler/style/editor.css');

  require('data-wrangler/style/table.css');

  require('data-wrangler/style/wrangler.css');

  BaseCtrl = require('scripts/BaseClasses/BaseController.coffee');

  module.exports = DataWranglerMainCtrl = (function(superClass) {
    extend(DataWranglerMainCtrl, superClass);

    function DataWranglerMainCtrl() {
      return DataWranglerMainCtrl.__super__.constructor.apply(this, arguments);
    }

    DataWranglerMainCtrl.inject('$rootScope', 'app_analysis_dataWrangler_wrangler', 'app_analysis_dataWrangler_msgService');

    DataWranglerMainCtrl.prototype.initialize = function() {
      var data, stateListener;
      this.wrangler = this.app_analysis_dataWrangler_wrangler;
      this.msgManager = this.app_analysis_dataWrangler_msgService;
      this.dw = require('data-wrangler');
      this.DATA_TYPES = this.msgManager.getSupportedDataTypes();
      this.dataType = '';
      data = this.wrangler.init().then((function(_this) {
        return function(status) {
          var w;
          if (status) {
            _this.dataType = _this.DATA_TYPES.FLAT;
            return w = _this.dw.wrangle();
          }
        };
      })(this));
      return stateListener = this.$rootScope.$on('$stateChangeStart', (function(_this) {
        return function(event, toState, toParams, fromState, fromParams) {
          if ((fromState.name != null) && fromState.name === 'app_analysis_dataWrangler') {
            if (_this.dataType === _this.DATA_TYPES.FLAT) {
              _this.wrangler.saveData();
            }
            _this.msgManager.broadcast('wrangler:done');
            return stateListener();
          }
        };
      })(this));
    };

    return DataWranglerMainCtrl;

  })(BaseCtrl);

}).call(this);

//# sourceMappingURL=DataWranglerMainCtrl.controller.js.map
