// Generated by CoffeeScript 1.12.2
(function() {
  'use strict';
  var BaseService, ClusterSpectral,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseService = require('scripts/BaseClasses/BaseService.coffee');


  /*
    @name: app_analysis_cluster_spectral
    @type: service
    @desc: Performs spectral clustering using NJW algorithm
    “On Spectral Clustering: Analysis and an algorithm” Andrew Y. Ng, Michael I. Jordan, Yair Weiss, 2001
   */

  module.exports = ClusterSpectral = (function(superClass) {
    extend(ClusterSpectral, superClass);

    function ClusterSpectral() {
      return ClusterSpectral.__super__.constructor.apply(this, arguments);
    }

    ClusterSpectral.inject('$timeout', 'app_analysis_cluster_metrics');

    ClusterSpectral.prototype.initialize = function() {
      this.metrics = this.app_analysis_cluster_metrics;
      this.name = 'Spectral clustering';
      this.data = {};
      this.timer = null;
      return this.params = {};
    };

    ClusterSpectral.prototype.getName = function() {
      return this.name;
    };

    ClusterSpectral.prototype.getParams = function() {
      return this.params;
    };

    ClusterSpectral.prototype.step = function() {};

    return ClusterSpectral;

  })(BaseService);

}).call(this);

//# sourceMappingURL=ClusterSpectral.service.js.map
