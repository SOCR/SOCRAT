// Generated by CoffeeScript 1.12.2
(function() {
  'use strict';
  var BaseCtrl, ClusterMainCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseCtrl = require('scripts/BaseClasses/BaseController.coffee');

  module.exports = ClusterMainCtrl = (function(superClass) {
    extend(ClusterMainCtrl, superClass);

    function ClusterMainCtrl() {
      return ClusterMainCtrl.__super__.constructor.apply(this, arguments);
    }

    ClusterMainCtrl.inject('app_analysis_cluster_dataService', '$timeout', '$scope');

    ClusterMainCtrl.prototype.initialize = function() {
      this.dataService = this.app_analysis_cluster_dataService;
      this.DATA_TYPES = this.dataService.getDataTypes();
      this.title = 'Clustering module';
      this.dataType = '';
      this.transforming = false;
      this.transformation = '';
      this.transformations = [];
      this.affinityMatrix = null;
      this.showresults = false;
      this.avgAccuracy = '';
      this.accs = {};
      this.dataPoints = null;
      this.means = null;
      this.assignments = null;
      this.$scope.$on('cluster:updateDataPoints', (function(_this) {
        return function(event, data) {
          return _this.$timeout(function() {
            return _this.updateChartData(data);
          });
        };
      })(this));
      return this.$scope.$on('cluster:updateDataType', (function(_this) {
        return function(event, dataType) {
          return _this.dataType = dataType;
        };
      })(this));
    };

    ClusterMainCtrl.prototype.prettifyArrayOutput = function(arr) {
      if (arr != null) {
        arr = arr.map(function(x) {
          return x.toFixed(3);
        });
        return '[' + arr.toString().split(',').join('; ') + ']';
      }
    };

    ClusterMainCtrl.prototype.showResults = function(accuracy) {
      if (Object.keys(accuracy).length !== 0) {
        this.avgAccuracy = accuracy.average.toFixed(2);
        delete accuracy.average;
        this.accs = accuracy;
        return this.showresults = true;
      }
    };

    ClusterMainCtrl.prototype.updateChartData = function(data) {
      if (data.dataPoints != null) {
        this.dataPoints = data.dataPoints;
      }
      this.means = data.means;
      return this.assignments = data.labels;
    };

    ClusterMainCtrl.prototype.finish = function(results) {
      if (results == null) {
        results = null;
      }
      this.msgManager.broadcast('cluster:done', results);
      return showResults(results);
    };

    return ClusterMainCtrl;

  })(BaseCtrl);

}).call(this);

//# sourceMappingURL=ClusterMainCtrl.ctrl.js.map
