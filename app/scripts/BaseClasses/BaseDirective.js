// Generated by CoffeeScript 1.12.2
(function() {
  'use strict';

  /*
    @name BaseDirective
    @desc Base class for Angular directives
   */
  var BaseDirective,
    slice = [].slice;

  module.exports = BaseDirective = (function() {
    BaseDirective.register = function(module, name) {
      var ref;
      if (name == null) {
        name = this.name || ((ref = this.toString().match(/function\s*(.*?)\(/)) != null ? ref[1] : void 0);
      }
      return module.directive(name, (function(_selfPtr) {
        var directive;
        directive = function() {
          var dependencies;
          dependencies = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return new _selfPtr(dependencies);
        };
        if (_selfPtr.annotations != null) {
          directive.$inject = _selfPtr.annotations.map(function(annotation) {
            return annotation.name;
          });
        }
        return directive;
      })(this));
    };

    BaseDirective.inject = function() {
      var ANNOTATION_REG, annotations;
      annotations = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      ANNOTATION_REG = /^(\S+)(\s+as\s+(\w+))?$/;
      return this.annotations = annotations.map(function(annotation) {
        var match;
        match = annotation.match(ANNOTATION_REG);
        return {
          name: match[1],
          identifier: match[3] || match[1]
        };
      });
    };

    function BaseDirective(dependencies) {
      var annotation, i, index, len, ref;
      if (dependencies.length) {
        ref = this.constructor.annotations;
        for (index = i = 0, len = ref.length; i < len; index = ++i) {
          annotation = ref[index];
          this[annotation.identifier] = dependencies[index];
        }
      }
      if (typeof this.initialize === "function") {
        this.initialize();
      }
    }

    return BaseDirective;

  })();

}).call(this);

//# sourceMappingURL=BaseDirective.js.map
